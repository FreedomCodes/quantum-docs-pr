### YamlMime:QSharpType
uid: microsoft.quantum.primitive.assertprob
name: AssertProb
type: operation
namespace: Microsoft.Quantum.Primitive
summary: >2
   Asserts that measuring the given qubits in the given Pauli basis will have the given result
   with the given probability, within some tolerance.
remarks: >2

  ## Examples
   ```qsharp
   using (register = Qubit[1]) {
       H(register[0]);
       AssertProb([PauliZ], register, One, 0.5,
           "Measuring in conjgate basis did not give 50/50 results.");
   }
   ```
syntax: 'operation AssertProb (bases : Pauli[], qubits : Qubit[], result : Result, prob : Double, msg : String, tol : Double) : ()'
seealso: ' - @"microsoft.quantum.primitive.assertprob"'
input:
  content: '(bases : Pauli[], qubits : Qubit[], result : Result, prob : Double, msg : String, tol : Double)'
  types:
  - name: bases
    summary: >2-
       A measurement effect to assert the probability of, expressed as a
       mutli-qubit Pauli operator.
    uid: microsoft.quantum.primitive.pauli
    isArray: true
  - name: msg
    summary: >2
       A message to be reported if the assertion fails.
    uid: microsoft.quantum.primitive.string
  - name: prob
    summary: ' The probability with which the given result is expected.'
    uid: microsoft.quantum.primitive.float
  - name: qubits
    summary: ' A register on which to make the assertion.'
    uid: microsoft.quantum.primitive.qubit
    isArray: true
  - name: result
    summary: ' An expected result of `Measure(bases, qubits)`.'
    uid: microsoft.quantum.primitive.result
output:
  content: ()
  types:
  - uid: microsoft.quantum.primitive.integer
